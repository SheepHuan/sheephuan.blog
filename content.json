{"pages":[{"title":"About","text":"Hello!","link":"/about/index.html"}],"posts":[{"title":"Docker 配置桌面 + VNC Server","text":"面向docker hub构建12345678docker pull sheephuan/vnc4docker:ubuntu2004-xfce4-20220531docker run --privileged -itd -p 22001:22 -p 15901:5901 --name ubuntu-xfce4 vnc-ubuntu2004:xcfe4 /usr/sbin/initdocker exec -it ubuntu-xfce4 /bin/bash# vncserver 默认密码123456vncserver :1 -localhost no 从零开始构建构建Dokcer1234567docker pull ubuntu:focal-20200423# -v hostdir:dockerdir# 注意这样启动 无法正常使用systemctl命令docker run -it -p 22001:22 -p 15902:5901 --name xfce4 ubuntu:focal-20200423 /bin/bash#启动docker exec -it huany /bin/bash apt换源12345# 备份cp /etc/apt/sources.list /etc/apt/sources.list.bakrm /etc/apt/sources.listvim /etc/apt/sources.list 阿里云https://developer.aliyun.com/mirror/ubuntu 1234567891011121314deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse# deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse# deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse 清华开源镜像站https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/ 123456789101112131415# 20.04 LTS# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释# 记得把https换成httpdeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiversedeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiversedeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiversedeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse 中科大https://mirrors.ustc.edu.cn/help/ubuntu.html?highlight=ubuntu 12345678910111213141516# 默认注释了源码仓库，如有需要可自行取消注释deb http://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiversedeb http://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiversedeb http://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiversedeb http://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse 安装桌面环境 xfce4+tigervnc安装123apt updateapt install xfce4 xfce4-goodies -yapt install tigervnc-standalone-server -y 配置vnc设置vnc密码1234# 设置vnc密码vncpasswd# 输入两次密码# 第三次的view-only password 输入 n 即可 设置vnc启动桌面12# 编写xstartup文件，vim /root/.vnc/xstartup 12345#输入以下内容#!/bin/shunset SESSION_MANAGERunset DBUS_SESSION_BUS_ADDRESSexec startxfce4 12# 设置启动权限chmod u+x /root/.vnc/xstartup 设置vnc显示选项123456# in /root/.vnc/config# vim /root/.vnc/configgeometry=1920x1080dpi=128 启动vnc12# -localhost no表示其他IP可以访问，否则只能本地访问vncserver -localhost no 设置 VNC 为 系统服务(我没做)1vim /etc/systemd/system/vncserver@.service 123456789101112131415[Unit]Description=Remote desktop service (VNC)After=syslog.target network.target[Service]Type=simpleUser=linuxizePAMName=loginPIDFile=/home/%u/.vnc/%H%i.pidExecStartPre=/bin/sh -c '/usr/bin/vncserver -kill :%i &gt; /dev/null 2&gt;&amp;1 || :'ExecStart=/usr/bin/vncserver :%i -geometry 1920x1080 -alwaysshared -fgExecStop=/usr/bin/vncserver -kill :%i[Install]WantedBy=multi-user.target 保存此文件 123456# 配置文件生效systemctl daemon-reload# 设为开机启动systemctl enable vncserver@1.servicesystemctl start vncserver@1.servicesystemctl status vncserver@1.service 打包镜像12345678910111213docker commit xfce4 vnc-ubuntu2004:xcfe4# 容器长传docker tag vnc-ubuntu2004:xcfe4 sheephuan/vnc4docker:ubuntu2004-xfce4-20220531docker logindocker push sheephuan/vnc4docker:ubuntu2004-xfce4-20220531docker save -o vnc-ubuntu2004-xcfe4.tar vnc-ubuntu2004:xcfe4# 在新服务载入docker load --input vnc-ubuntu2004-xcfe4.tar 考虑学习写一个Dockerfile 问题System has not been booted with systemd as init system (PID 1). Can’t operate.1docker run --privileged -itd -p 22004:22 -p 15904:5901 --name txfce4 vnc-ubuntu2004:xcfe4 /usr/sbin/init Failed to exec default Terminal Emulator https://blog.csdn.net/weixin_42912498/article/details/107162983","link":"/posts/8ab24eb0/"},{"title":"从零搭建Hadoop Docker","text":"构建基础系统构建Docker1234# 拉取镜像docker pull ubuntu:focal-20200423# 运行容器docker run -h master --name hadoop -p 50070:50070 -p 8088:8088 -p 50075:50075 -v /home/tclab/huany:/home/ -itd ubuntu:focal-20200423 /bin/bash 12345678910111213141516# 进入dockerdocker exec -it hadoop /bin/bash# 更新软件源apt update# 安装vim和网络工具包apt install vim iputils-ping net-tools -y# 安装jdk8apt-get install openjdk-8-jdk -y# 安装ssh 服务apt-get install openssh-server -y# 解压hadoop压缩包到/usr/local文件夹下tar -zxvf /home/hadoop-3.2.3.tar.gz -C /usr/local/# 将解压后的包重命名为 /usr/local/hadoopmv /usr/local/hadoop-3.2.3 /usr/local/hadoop 配置ssh配置公钥12345# 生成私钥ssh-keygen -t rsa # cat /root/.ssh/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys 允许公钥登录1vim /etc/ssh/sshd_config 12PubkeyAuthentication yesPermitRootLogin yes 取消公钥检查1vim /etc/ssh/ssh_config 1234# 在配置文件中修改为这个配置Host * port 22 StrictHostKeyChecking no 配置环境变量1vim /root/.bashrc 1234# 在/root/.bashrc 末端添加一下内容export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64export HADOOP_HOME=/usr/local/hadoopexport PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin 1source /root/.bashrc : 修改DNS1vim /etc/hosts 123# 防止出问题内容修改如下0.0.0.0 localhost0.0.0.0 master 配置Hadoop配置hadoop-env.sh1vim /usr/local/hadoop/etc/hadoop/hadoop-env.sh 12345678910# jdk路径export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64# root用户运行export HDFS_NAMENODE_USER=rootexport HDFS_DATANODE_USER=rootexport HDFS_SECONDARYNAMENODE_USER=rootexport YARN_RESOURCEMANAGER_USER=rootexport YARN_NODEMANAGER_USER=root# 修改日志路径export HADOOP_LOG_DIR=/home/hadoop/logs 配置core-site.xml1vim /usr/local/hadoop/etc/hadoop/core-site.xml 1234567891011 &lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;value&gt;hdfs://master:9000&lt;/value&gt; &lt;description&gt;HDFS的URI，文件系统://namenode标识:端口号&lt;/description&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; &lt;value&gt;/home/hadoop/tmp&lt;/value&gt; &lt;description&gt;namenode上本地的hadoop临时文件夹&lt;/description&gt;&lt;/property&gt; 配置hdfs-site.xml1vim /usr/local/hadoop/etc/hadoop/hdfs-site.xml 1234567891011121314151617&lt;property&gt; &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt; &lt;value&gt;/home/hadoop/nameNode&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt; &lt;value&gt;/home/hadoop/dataNode&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; &lt;description&gt;副本个数，配置默认是3,应小于datanode机器数量&lt;/description&gt; &lt;/property&gt;&lt;property&gt; &lt;name&gt;dfs.http.address&lt;/name&gt; &lt;value&gt;master:50070&lt;/value&gt; &lt;/property&gt; 配置mapred-site.xml1vim /usr/local/hadoop/etc/hadoop/mapred-site.xml 1234&lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt;&lt;/property&gt; 配置yarn-site.xml1vim /usr/local/hadoop/etc/hadoop/yarn-site.xml 12345678910111213141516171819202122232425262728293031323334353637&lt;property&gt; &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; &lt;value&gt;master&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;description&gt;The address of the applications manager interface in the RM.&lt;/description&gt; &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt; &lt;value&gt;${yarn.resourcemanager.hostname}:8032&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;description&gt;The address of the scheduler interface.&lt;/description&gt; &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt; &lt;value&gt;${yarn.resourcemanager.hostname}:8030&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;description&gt;The http address of the RM web application.&lt;/description&gt; &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt; &lt;value&gt;${yarn.resourcemanager.hostname}:8088&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;description&gt;The https adddress of the RM web application.&lt;/description&gt; &lt;name&gt;yarn.resourcemanager.webapp.https.address&lt;/name&gt; &lt;value&gt;${yarn.resourcemanager.hostname}:8090&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt; &lt;value&gt;${yarn.resourcemanager.hostname}:8031&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;description&gt;The address of the RM admin interface.&lt;/description&gt; &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt; &lt;value&gt;${yarn.resourcemanager.hostname}:8033&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt; &lt;/property&gt; 打包+测试打包12docker commit hadoop hadoop:basedocker tag hadoop:base sheephuan/hadoop:hadoop-base 构建容器123docker run --privileged -h master --name hadoop-test -p 9000:9000 -p 50070:50070 -p 8088:8088 -itd sheephuan/hadoop:hadoop-base /usr/sbin/initdocker exec -it hadoop-test /bin/bash 初始化hadoop123456# 新建hadoop必须的文件夹mkdir /home/hadoopmkdir /home/hadoop/logsmkdir /home/hadoop/tmpmkdir /home/hadoop/nameNodemkdir /home/hadoop/dataNode 12hdfs namenode -formatstart-all.sh 测试查看进程12# 查看进程jps 查看端口12# 查看端口netstat -ant 查看yarn服务访问http://&lt;master-ip&gt;:8088 查看hadoop服务访问http://&lt;master-ip&gt;:50070 测试代码12345678# 在docker里新建一个文件echo &quot;Hello Hadoop!&quot; &gt;&gt; /home/hello.txt# 将hello.txt上传到hdfs根目录hdfs dfs -put /home/hello.txt /# ls一下dfs根目录hdf dfs -ls / 12345# 必要时删除rm -rf /home/hadoop/tmp/*rm -rf /home/hadoop/nameNode/*rm -rf /home/hadoop/dataNode/*rm -rf /home/hadoop/logs/*","link":"/posts/6680251e/"}],"tags":[{"name":"Docker","slug":"Docker","link":"/tags/Docker/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"Hadoop","slug":"Hadoop","link":"/tags/Hadoop/"}],"categories":[{"name":"开发环境","slug":"开发环境","link":"/categories/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"}]}